# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson

# --- CoffeeScript ---
'.source.coffee':
  'Atom snippets':
    'prefix': 'snip'
    'body':   '''
      '.source.${1:ext}':
        '${2:name}':
          'prefix': '$3'
          'body':   '$4'
    '''
  'Atom snippet':
    'prefix': 'snipns'
    'body':   '''
    '${1:name}':
      'prefix': '$2'
      'body':   '$3'
    '''
  'function':
    'prefix': 'fun'
    'body':   '($1) -> \n\t#$0'
  'describe (BDD)':
    'prefix': 'describe'
    'body':   "describe '${1:desc}', ->\n\t#$0"
  'it (BDD)':
    'prefix': 'it'
    'body':   "it 'should $1', ->\n\t#$0"

# --- JavaScript ---
'.source.js':
  'each':
    'prefix': 'each'
    'body':   'each(function(${1:arg}) {\n\t$0\n})'
  'anonymous func':
    'prefix': 'afun'
    'body':   'function ($1) {\n\t$0\n}'
  'describe (BDD)':
    'prefix': 'describe'
    'body':   "describe('${1:desc}', () => {\n\t$0\n});"
  'it (BDD)':
    'prefix': 'it'
    'body':   "it('should $1', () => {\n\t$0\n});"
  'jQuery.click':
    'prefix': 'click'
    'body':   'click(function() {\n\t$0\n});'

# --- Elixir ---
'.source.elixir':
  '|>':
    'prefix': 'pipe'
    'body':   '|> '
  '->':
    'prefix': 'arrow'
    'body':   '->\n\t'
  'IO.inspect':
    'prefix': 'IO.inspect'
    'body':   'IO.inspect'
  'IO.puts':
    'prefix': 'IO.puts'
    'body':   'IO.puts'
  'oneline if':
    'prefix': 'if:'
    'body':   'if $1, do: $0'
  'oneline def':
    'prefix': 'def:'
    'body':   'def $1, do: $0'
  'anonymous func':
    'prefix': 'fn'
    'body':   'fn ${1:arg} -> $2 end$0'
  'anonymous func &':
    'prefix': 'fna'
    'body':   '&(&1$1)$0'
  'import':
    'prefix': 'import'
    'body':   'import ${1:Module}$0'
  'import only':
    'prefix': 'import only'
    'body':   'import ${1:Module}, only: [${2:function}: ${3:arity}]$0'
  'import except':
    'prefix': 'import except'
    'body':   'import ${1:Module}, except: [${2:function}: ${3:arity}]$0'
  'try do … rescue … end':
    'prefix': 'rescue'
    'body':   'try do\n\t$1\nrescue\n\te in RuntimeError -> e$2\nend$0'
  'try do … catch … end':
    'prefix': 'catch'
    'body':   'try do\n\t$1\ncatch\n\tx -> "Got #{x}"$2\nend$0'
  'receive do … end':
    'prefix': 'receive'
    'body':   'receive do\n  $0\nend'
  'after ->':
    'prefix': 'after'
    'body':   'after ${1:time} ->\n\t$0'
  '@doc':
    'prefix': 'doc'
    'body':   '@doc """$0\n"""'
  '@moduledoc':
    'prefix': 'mdoc'
    'body':   '@moduledoc """$0\n"""'

# --- HTML ---
'.text.html':
  'svg':
    'prefix': 'svg'
    'body':   '<svg width="${1:500px}" height="${2:100px}">\n\t$0\n</svg>'
  'rect':
    'prefix': 'rect'
    'body':   '<rect x="$1" y="$2" width="$3" height="$4"/>'
  'circle':
    'prefix': 'circle'
    'body':   '<circle cx="$1" cy="$2" r="$3"/>'
  'ellipse':
    'prefix': 'ellipse'
    'body':   '<ellipse cx="$1" cy="$2" rx="$3" ry="$4"/>'
  'line':
    'prefix': 'line'
    'body':   '<line x1="$1" y1="$2" x2="$3" y2="$4" stroke="${5:black}"/>'
  'text':
    'prefix': 'text'
    'body':   '<text x="$1" y="$2">$0</text>'

'.text.html .meta.tag, .text.html .embedded':
  'width':
    'prefix': 'width'
    'body':   'width="$1"'
  'height':
    'prefix': 'height'
    'body':   'heigh="$1"'
  'fill':
    'prefix': 'fill'
    'body':   'fill="${1:color}"'
  'opacity':
    'prefix': 'opacity'
    'body':   'opacity="${1:0.5}"'
  'stroke':
    'prefix': 'stroke'
    'body':   'stroke="${1:color}"'
  'stroke width':
    'prefix': 'stroke-width'
    'body':   'stroke-width="${1:5}px"'
  'SVG class':
    'prefix': 'class'
    'body':   'class="${1:name}"'

# --- LaTeX ---
'.text.tex.latex':
  'table':
    'prefix': 'make table'
    'body':   '''
    \\\\begin{table}[htbp]
      \\\\centering
      \\\\caption{${1:Caption}}
      \\\\label{tab:${2:Label}}
      \\\\begin{tabular}{${3:c}} \\\\toprule
        $0 \\\\\\\\
        \\\\midrule
         \\\\\\\\
        \\\\bottomrule
      \\\\end{tabular}
    \\\\end{table}$0
    '''
  'figure':
    'prefix': 'make figure'
    'body':   '''
    \\\\begin{figure}[htbp]
      \\\\centering
      \\\\includegraphics[scale=${1:1.0}]{${2:image.file}}
      \\\\caption{${3:Caption}}
      \\\\label{fig:${4:Label}}
    \\\\end{figure}$0
    '''
