[include]
	path = .gitconfig.macos
	path = .gitconfig.linux
[user]
	name = Mako
	email = mnfeconicu41@gmail.com
[core]
	excludesfile = ~/.gitignore_global
	editor = vim -c \"set fenc=utf-8\"
	autocrlf = input
[help]
	autocorrect = 1
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[credential]
	helper = cache --timeout 30000
[push]
	default = upstream
[alias]
	a = add
	aa = add -A
	addp = add -p
	am = commit --amend -m
	amend = commit --amend
	amendm = commit --amend -m
	ap = add -p
	b = branch
	ba = branch -a
	# clean merged branches
	bclean = "!f() { git branch --merged ${1-master} | grep -v \" ${1-master}$\" | xargs git branch -d; }; f"
	c = commit
	cam = commit -am
	ch = checkout
	chb = checkout -b
	chm = checkout master
	cm = commit -m
	d = diff
	dc = diff --cached
	dt = diff HEAD^ HEAD
	empty = commit --allow-empty
	emptym = commit --allow-empty -m
	f = fetch
	fa = fetch --all
	fp = fetch --prune
	graph = log --graph --oneline --all --date=short --decorate=short --pretty=format:'%Cgreen%h %Creset%cd %Cblue%cn %Cred%d %Creset%s'
	graphp = "!git graph -p"
	ignore = !"f() { local s=$1; shift; \
		while [ $# -gt 0 ]; do s=\"$s,$1\"; shift; done;\
		curl \"https://www.gitignore.io/api/$s\"; }; f"
	issue = "!ghi"
	l = log
	lp = log -p
	o = "!git-open"
	open = "!git-open"
	protocol = "!git-protocol"
	r = remote
	ru = remote update
	rv = remote -v
	s = status
	showp = show -p
	ss = status -s
	sub = submodule
	suba = submodule add
	subf = submodule foreach
	subforeach = submodule foreach
	subupgrade = submodule foreach git pull origin master
	subi = submodule init
	subu = submodule update
	undo = reset --mixed HEAD~1
	unstage = reset HEAD --
	update = "!git pull --prune $@ && git submodule update --init --recursive"
	wtf = "!git-wtf"
	zen = "!zen"
	pr = "!f() { git fetch -fu ${2:-upstream} refs/pull/$1/head:pr/$1 && git checkout pr/$1; }; f"
	pr-clean = "!git checkout master ; git for-each-ref refs/heads/pr/* --format="%(refname)" | while read ref ; do branch=${ref#refs/heads/} ; git branch -D $branch ; done"
[github]
	user = tex2e
[ghi]
	token = !security find-internet-password -a tex2e -s github.com -l 'ghi token' -w
