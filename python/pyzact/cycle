#!/usr/bin/env python3
#
# ## cycle(1) --
#
# [code](cycle)
#
# ### SYNOPSIS
#
#     cycle
#
# ### Description
#
# Generate all the circulated patterns.
#
# ### Usage
#
#     $ echo A B C D E | cycle
#     A B C D E
#     B C D E A
#     C D E A B
#     D E A B C
#     E A B C D
#

import sys
import argparse
import fileinput
import re

sys.path.append('lib')
import utils

utils.exit_by_sigpipe()

# Parse args
parser = argparse.ArgumentParser()
utils.add_common_options(parser)

args = parser.parse_args()
del sys.argv[:]

ifs, ofs = utils.get_iofs(args)

# output
ifs_regex = re.compile('[%s]' % ifs) if ifs else ''

def rotate(l, n):
    return l[n:] + l[:n]

for line in fileinput.input():
    array = utils.split(ifs_regex, line.strip())

    for i in range(0, len(array)):
        print( ofs.join(rotate(array, i)) )
